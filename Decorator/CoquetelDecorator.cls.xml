<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Decorator.CoquetelDecorator">
<Description>
Decorator

Dinamicamente, agregar responsabilidades adicionais a objetos. 
Os Decorators fornecem uma alternativa flexível ao uso de subclasses 
para extensão de funcionalidades.</Description>
<Super>Decorator.Coquetel</Super>
<TimeCreated>64039,67026.252518</TimeCreated>

<Property name="coquetel">
<Type>Coquetel</Type>
<Private>1</Private>
</Property>

<Method name="%OnNew">
<FormalSpec>coquetel:Coquetel</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set ..coquetel = coquetel
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getNome">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit ..coquetel.getNome() _" - "_ ..nome
]]></Implementation>
</Method>

<Method name="getPreco">
<ReturnType>%Double</ReturnType>
<Implementation><![CDATA[	Quit ..coquetel.getPreco() _" - "_ ..preco
]]></Implementation>
</Method>
</Class>
</Export>
